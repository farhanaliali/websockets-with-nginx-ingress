apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
 name: websocket
 annotations:
  cert-manager.io/cluster-issuer: letsencrypt-production
  nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
  nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
  nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
  nginx.ingress.kubernetes.io/server-snippets: |
   location / {
    proxy_set_header Upgrade $http_upgrade;
    proxy_http_version 1.1;
    proxy_set_header X-Forwarded-Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header Host $host;
    proxy_set_header Connection "upgrade";
    proxy_cache_bypass $http_upgrade;
    }
spec:
 tls:
  - hosts:
    - sms-backend-k8s.rockvillegroup.com
    secretName: production-backend
 ingressClassName: nginx
 rules:
 - host: sms-backend-k8s.rockvillegroup.com
   http:
    paths:
     - backend:
         service: 
           name: test
           port:
              number: 8080

       path: /
       pathType: Prefix
